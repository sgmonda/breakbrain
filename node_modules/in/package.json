{
  "name": "in",
  "version": "0.0.1",
  "description": "Node.js module to standard input management",
  "main": "main.js",
  "author": {
    "name": "Sergio Garcia Mondaray"
  },
  "keywords": [
    "input",
    "console"
  ],
  "engines": {
    "node": "*"
  },
  "readme": "Module for input management with nodejs.\n\nThis is a very young project. Use it at your own risk.\n\nInstall\n=======\n\nTo install the most recent release from npm, run:\n\n    npm install in\n\nUse\n====\n\nYou can do many things with this module\n\nRead standard input at once\n----------------------------\n\n```javascript\n    var input = require('in');\n    input.read(function(data){\n        console.log(data);\n    });\n```\n\nParse Unix-like command line options\n-------------------------------------\n\n```javascript\n    var input = require('in');\n    var ops = input.getopt({\n        'check': {key: 'c', args: 2},\n        'map': {key: 'm'},\n        'kaka': {key: 'k', args: 2},\n        'ooo': {key: 'o'}\n    });\n    console.log(ops);\n```\n\nIf you run the previous example with the command\n\n    node pruebas.js -c 23 45 88 --map -k 23 44 cosa\n\nProgram output will be:\n\n    { check: { args: [ '23', '45' ] },\n      args: [ '88', 'cosa' ],\n      map: true,\n      kaka: { args: [ '23', '44' ] } }\n\nSo you can check options:\n\n```javascript\n    if(ops.map){\n        // Your action\n    }\n    if(ops.kaka){\n        // Your action, using ops.kaka[0] or ops.kaka[1] or...\n    }\n```\n",
  "_id": "in@0.0.1",
  "_from": "in"
}
